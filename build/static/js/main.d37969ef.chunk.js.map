{"version":3,"sources":["components/Home.js","components/registrations/Login.js","components/registrations/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Home","to","Login","props","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","state","landlord","first_name","last_name","email","password","axios","post","withCredentials","then","response","data","logged_in","handleLogin","redirect","errors","catch","error","console","log","history","push","handleErrors","map","key","this","loggedInStatus","onSubmit","placeholder","type","onChange","Component","Signup","password_confirmation","status","App","loginStatus","get","handleLogout","isLoggedIn","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d37969ef.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Home = () => {\n  return(\n    <div>\n      <Link to='/login'>Log In</Link>\n      <br></br>\n      <Link to='/signup'>Sign Up</Link>\n    </div>\n  );\n};\n\nexport default Home;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nexport default class Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      first_name:'',\n      last_name: '',\n      email: '',\n      password: '',\n      errors: ''\n    };\n  }\n\nhandleChange = (event) => {\n  const {name, value} = event.target\n  this.setState({\n    [name]: value\n  })\n};\n\nhandleSubmit = (event) =>{\n  event.preventDefault()\n  const {first_name, last_name, email, password} = this.state\n\n  const landlord = {\n    first_name: first_name,\n    last_name: last_name,\n    email: email,\n    password: password\n  }\n   \n  axios.post('http://localhost:3001/login', {landlord}, {withCredentials: true})\n  .then(response => {\n    if (response.data.logged_in){\n   \n      this.props.handleLogin(response.data)\n      this.redirect()\n    }else{\n      this.setState({\n        errors: response.data.errors\n      })\n    }\n  })\n \n  .catch(error => console.log('api errors:', error))\n  };\n\n\nredirect = () =>{\n  this.props.history.push('/')\n}\n\nhandleErrors = () =>{\n  return(\n    <div>\n      <ul>\n        {this.state.errors.map(error => {\n          return <li key={error}>{error}</li>\n        })}\n      </ul>\n    </div>\n  )\n}\n\ncomponentWillMount(){\n  return this.props.loggedInStatus ? this.redirect() : null\n}\n\n\n  render() {\n    const {first_name, last_name, email, password, errors} = this.state\n    return (\n      <div>\n        <h1>Log In</h1>\n        <form onSubmit={this.handleSubmit}>\n        <input\n        placeholder=\"first name\"\n        type=\"text\"\n        name=\"first_name\"\n        value={first_name}\n        onChange={this.handleChange}\n        />\n        <input\n        placeholder=\"last name\"\n        type=\"text\"\n        name=\"last_name\"\n        value={last_name}\n        onChange={this.handleChange}\n        />\n        <input\n          placeholder=\"email\"\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={this.handleChange}\n        />\n        <input\n               placeholder=\"password\"\n               type=\"password\"\n               name=\"password\"\n               value={password}\n               onChange={this.handleChange}\n        />\n        <button placeholder=\"submit\" type=\"submit\">\n          Log In\n        </button>\n        <div>\n          or <Link to='/signup'>Sign up</Link>\n        </div>\n        </form>\n        <div>\n          {errors? this.handleErrors(): null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nexport default class Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      first_name:'',\n      last_name: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      errors: ''\n    };\n  }\n\nhandleChange = (event) => {\n  const {name, value} = event.target\n  this.setState({\n    [name]: value\n  })\n};\n\nhandleSubmit = (event) =>{\nevent.preventDefault()\nconst {first_name, last_name, email, password, password_confirmation} = this.state\ndebugger\nlet landlord = {\n  first_name: first_name,\n  last_name: last_name,\n  email: email,\n  password: password,\n  password_confirmation: password_confirmation\n}\n\naxios.post('http://localhost:3001/landlords',{landlord}, {withCredentials: true})\n.then(response => {\n  if (response.data.status === 200){\n    this.props.handleLogin(response.data)\n    this.redirect()\n  }else {\n    this.setState({\n      errors: response.data.errors\n    })\n  }\n})\n.catch(error => console.log('api errors:', error))\n\n};\n\nredirect = () => {\n  this.props.history.push('/')\n}\n\nhandleErrors= () =>{\n  return (\n    <div>\n      <ul>\n        {this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n      </ul>\n    </div>\n  )\n}\n\n  render() {\n    const {first_name, last_name, email, password, password_confirmation} = this.state\n    return (\n      <div>\n        <h1>Sign Up</h1>\n        <form onSubmit={this.handleSubmit}>\n        <input\n        placeholder=\"first name\"\n        type=\"text\"\n        name=\"first_name\"\n        value={first_name}\n        onChange={this.handleChange}\n        />\n        <input\n        placeholder=\"last name\"\n        type=\"text\"\n        name=\"last_name\"\n        value={last_name}\n        onChange={this.handleChange}\n        />\n        <input\n          placeholder=\"email\"\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={this.handleChange}\n        />\n        <input\n               placeholder=\"password\"\n               type=\"password\"\n               name=\"password\"\n               value={password}\n               onChange={this.handleChange}\n        />\n        <input\n               placeholder=\"password confirmation\"\n               type=\"password\"\n               name=\"password_confirmation\"\n               value={password_confirmation}\n               onChange={this.handleChange}\n        />\n        <button placeholder=\"submit\" type=\"submit\">\n          Sign Up\n        </button>\n        <div>\n          or <Link to='/login'>Log In</Link>\n        </div>\n        </form>\n        <div>\n          {\n            this.state.errors ? this.handleErrors() : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport './App.css';\n\n\nexport default class App extends Component {\nconstructor(props){\n  super(props);\n  this.state = {\n    isLoggedIn: false,\n    landlord: {}\n  };\n}\n\ncomponentDidMount(){\n  this.loginStatus()\n}\n\nloginStatus = () => {\n  axios.get('http://localhost:3001/logged_in', {withCredentials: true})\n  .then(response => {\n    if (response.data.logged_in){\n      this.handleLogin(response)\n    }else{\n      this.handleLogout()\n    }\n  })\n  .catch(error => console.log('api errors:', error))\n}\n\n\nhandleLogin = (data) => {\n  debugger\nthis.setState({\n  isLoggedIn: true,\n  landlord: data.landlord\n})\n}\n\nhandleLogout = () => {\n  this.setState({\n    isLoggedIn: false,\n    landlord: {}\n  })\n}\n\n\n\n\nrender() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route \n            exact path='/' \n            render={props => (\n            <Home {...props} loggedInStatus={this.state.isLoggedIn}/>\n            )}\n          />\n          <Route \n            exact path='/login' \n            render={props => (\n            <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n            )}\n          />\n          <Route \n            exact path='/signup' \n            render={props => (\n            <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}