{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst IssueList = ({\n  issues\n}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const renderIssues = issues.map(issue => /*#__PURE__*/React.createElement(Link, {\n    key: issue.id,\n    to: `/issues/${issue.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 56\n    }\n  }, issue.message), \" \"));\n  return /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, [0, 1, 2, 3].map(value => {\n    const labelId = `checkbox-list-secondary-label-${value}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: `Avatar n°${value + 1}`,\n      src: `/static/images/avatar/${value + 1}.jpg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `Line item ${value + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleToggle(value),\n      checked: checked.indexOf(value) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nexport default IssueList;","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js"],"names":["React","Component","Link","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","IssueList","issues","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","renderIssues","map","issue","id","message","labelId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst IssueList = ({issues}) => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n\n  const renderIssues = issues.map(issue =>\n\n    <Link key={issue.id} to={`/issues/${issue.id}`}  > <h1>{issue.message}</h1> </Link>\n    )\n\n\n\n    return (\n      <List dense className={classes.root}>\n        {[0, 1, 2, 3].map((value) => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return (\n            <ListItem key={value} button>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`Avatar n°${value + 1}`}\n                  src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  onChange={handleToggle(value)}\n                  checked={checked.indexOf(value) !== -1}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n      }\n\n\nexport default IssueList\n\n\n\n\n\n  \n  \n"]},"metadata":{},"sourceType":"module"}