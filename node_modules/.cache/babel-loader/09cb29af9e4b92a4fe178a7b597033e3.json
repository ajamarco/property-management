{"ast":null,"code":"var _jsxFileName = \"/home/jamarco/code/projects/project-4/frontend/src/components/dashboard/Content.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Modal from '@material-ui/core/Modal';\nimport AddProperty from '../forms/AddProperty';\nimport PropertyCard from './PropertyCard';\nconst POST_URL = 'http://localhost:3001/properties';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: '40px 16px'\n  },\n  propertyGrid: {\n    flexGrow: 1\n  },\n  propertyCard: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}); //related to the modal\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n} //related to the modal\n\n\nfunction getModalStyle() {\n  const top = 35 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n} //related to the modal\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Content(props) {\n  //check to see if we should show the details of a property\n  const [details, setDetails] = useState(false); //load the properties in a state\n\n  const [properties, setProperties] = useState(props.properties ? props.properties : []); //related to the modal\n\n  const layout = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleAddProperty = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDeleteProperty = id => {\n    fetch(`${POST_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => setProperties(properties.filter(p => p.id !== id)));\n  }; //function called when add a new property \n\n\n  const addNewProperty = (e, value) => {\n    value = { ...value,\n      landlord_id: props.user.id\n    };\n    fetch(POST_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(value)\n    }).then(res => res.json()).then(data => {\n      handleClose();\n      setProperties([...properties, data.property]);\n    });\n  };\n\n  const body =\n  /*#__PURE__*/\n  //whats going to be inside the modal\n  React.createElement(\"div\", {\n    style: modalStyle,\n    className: layout.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddProperty, {\n    addNewProperty: addNewProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  })); //end of related stuff to modal\n  //render all properties\n\n  const renderProperties = () => {\n    if (properties.length === 0) {\n      return /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, \"You don't have any properties yet\");\n    } //render individual property cards\n    else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.propertyGrid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }, properties.map(property => /*#__PURE__*/React.createElement(PropertyCard, {\n          property: property,\n          classes: classes,\n          handleDeleteProperty: handleDeleteProperty,\n          handlePropertyClick: id => setDetails(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 41\n          }\n        }))));\n      }\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.searchBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    placeholder: \"Search by address\",\n    InputProps: {\n      disableUnderline: true,\n      className: classes.searchInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.addUser,\n    onClick: handleAddProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Add Property\"), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Reload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RefreshIcon, {\n    className: classes.block,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, renderProperties()), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, body));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["/home/jamarco/code/projects/project-4/frontend/src/components/dashboard/Content.js"],"names":["React","useState","PropTypes","AppBar","Toolbar","Typography","Paper","Grid","Button","TextField","Tooltip","IconButton","withStyles","makeStyles","SearchIcon","RefreshIcon","Modal","AddProperty","PropertyCard","POST_URL","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","propertyGrid","flexGrow","propertyCard","padding","textAlign","color","palette","text","secondary","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","position","width","backgroundColor","background","border","boxShadow","shadows","Content","props","details","setDetails","properties","setProperties","layout","modalStyle","open","setOpen","handleAddProperty","handleClose","handleDeleteProperty","id","fetch","method","headers","then","res","json","filter","p","addNewProperty","e","value","landlord_id","user","body","JSON","stringify","data","property","renderProperties","length","classes","map","disableUnderline","className","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Modal from '@material-ui/core/Modal';\nimport AddProperty from '../forms/AddProperty'\n\nimport PropertyCard from './PropertyCard'\n\nconst POST_URL = 'http://localhost:3001/properties';\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n  propertyGrid: {\n    flexGrow: 1,\n  },\n  propertyCard: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\n//related to the modal\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\n//related to the modal\nfunction getModalStyle() {\n  const top = 35 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n//related to the modal\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Content(props) {\n  //check to see if we should show the details of a property\n  const [details, setDetails] = useState(false);\n\n  //load the properties in a state\n  const [properties, setProperties] = useState(props.properties ? props.properties : []);\n  \n  //related to the modal\n  const layout = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleAddProperty = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDeleteProperty = (id) => {\n    \n    fetch(`${POST_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    })\n    .then(res => res.json())\n    .then((res) => setProperties(properties.filter(p => p.id !== id)));\n  }\n\n  //function called when add a new property \n  const addNewProperty = (e, value) => {\n    value = {\n      ...value,\n      landlord_id : props.user.id\n    }\n        fetch(POST_URL, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(value)\n        })\n        .then(res => res.json())\n        .then(data => {\n          handleClose();\n          setProperties([...properties, data.property]);\n          \n        });\n  }\n\n  const body = (//whats going to be inside the modal\n    <div style={modalStyle} className={layout.paper}>\n      <AddProperty addNewProperty={addNewProperty}/>\n    </div>\n  );\n\n  //end of related stuff to modal\n\n  //render all properties\n  const renderProperties = () => {\n  \n    if (properties.length === 0) {\n      return (\n        <Typography color=\"textSecondary\" align=\"center\">\n            You don't have any properties yet\n        </Typography>\n      )\n    }\n    //render individual property cards\n    else{\n      return (\n        <div className={classes.propertyGrid}>\n          <Grid container spacing={1}>\n            {properties.map(property => <PropertyCard property={property} classes={classes} handleDeleteProperty={handleDeleteProperty} handlePropertyClick={(id) => setDetails(id)}/> )}\n          </Grid>\n        </div>\n      )\n    }\n  }\n\n  const { classes } = props;\n \n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by address\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n            {/* Button to open modal to add a new property */}\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser} onClick={handleAddProperty}>\n                Add Property\n              </Button>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        {renderProperties()}\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);"]},"metadata":{},"sourceType":"module"}