{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst IssueList = ({\n  issues\n}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const classes = useStyles();\n  const [checkedDone, setChecked] = React.useState([false]);\n\n  const handleToggle = issue => () => {}; // const renderIssues = issues.map(issue =>\n  //   <Link key={issue.id} to={`/issues/${issue.id}`}  > <h1>{issue.message}</h1> </Link>\n  //   )\n\n\n  return /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, issues.map(issue => {\n    const labelId = `checkbox-list-secondary-label-${issue.message}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: issue.id,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar // alt={`Avatar n°${issues + 1}`}\n    // src={`/static/images/avatar/${value + 1}.jpg`}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: ` ${issue.message}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleToggle(issue),\n      checked: issue.isCompleted ? true : true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nexport default IssueList;","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js"],"names":["React","Component","Link","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","IssueList","issues","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","classes","checkedDone","setChecked","useState","handleToggle","issue","map","labelId","message","id","isCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAE9B,QAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAE,GAFN;AAGJC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,GAAZ,CAAD,CAA5B;AAOA,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,WAAD,EAAcC,UAAd,IAA4BxB,KAAK,CAACyB,QAAN,CAAe,CAAC,KAAD,CAAf,CAAlC;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM,CAIrC,CAJD,CAhB8B,CAuB9B;AAEA;AACA;;;AAIE,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAEL,OAAO,CAACP,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACgB,GAAP,CAAYD,KAAD,IAAW;AACrB,UAAME,OAAO,GAAI,iCAAgCF,KAAK,CAACG,OAAQ,EAA/D;AACA,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEH,KAAK,CAACI,EAArB;AAAyB,MAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEF,OAAlB;AAA2B,MAAA,OAAO,EAAG,IAAGF,KAAK,CAACG,OAAQ,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,QAAQ,EAAGJ,YAAY,CAACC,KAAD,CAFzB;AAGE,MAAA,OAAO,EAAEA,KAAK,CAACK,WAAN,GAAmB,IAAnB,GAA0B,IAHrC;AAIE,MAAA,UAAU,EAAE;AAAE,2BAAmBH;AAArB,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF;AAyBD,GA3BA,CADH,CADF;AAgCG,CA9DP;;AAiEA,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst IssueList = ({issues}) => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n  const [checkedDone, setChecked] = React.useState([false]);\n\n\n\n\n\n  const handleToggle = (issue) => () => {\n   \n\n    \n  };\n\n\n  // const renderIssues = issues.map(issue =>\n\n  //   <Link key={issue.id} to={`/issues/${issue.id}`}  > <h1>{issue.message}</h1> </Link>\n  //   )\n\n\n\n    return (\n      <List dense className={classes.root}>\n        {issues.map((issue) => {\n          const labelId = `checkbox-list-secondary-label-${issue.message}`;\n          return (\n            <ListItem key={issue.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  // alt={`Avatar n°${issues + 1}`}\n                  // src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={` ${issue.message}`} />\n              <ListItemSecondaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  onChange={(handleToggle(issue))}\n                  checked={issue.isCompleted? true : true}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                   {/* <Checkbox\n                  edge=\"end\"\n                  onChange={handleToggle(issue)}\n                  checked={checked.indexOf(issue) !== -1}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                /> */}\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n      }\n\n\nexport default IssueList\n\n\n\n\n\n  \n  \n"]},"metadata":{},"sourceType":"module"}