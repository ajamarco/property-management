{"ast":null,"code":"var _jsxFileName = \"/home/jamarco/code/projects/project-4/frontend/src/components/dashboard/PropertyDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function PropertyDetails({\n  property,\n  showAllProperties\n}) {\n  const styles = useStyles(); //load the property details\n\n  const [details, setDetails] = useState(0);\n  const [tenants, setTenants] = useState(0);\n  const [issues, setIssues] = useState(0);\n  const [todos, setTodos] = useState(0);\n  useEffect(() => {\n    const url = `http://localhost:3001/properties/${property}`;\n    fetch(url).then(res => res.json()).then(data => {\n      setDetails(data.property);\n      setTenants(data.tenants);\n      setTodos(data.todos);\n      setIssues(data.issues);\n    });\n  }, []); // render the details after is loaded\n\n  const renderDetails = () => {\n    const newTenants = tenants.map(obj => ({\n      \"Full Name\": obj.first_name + \" \" + obj.last_name,\n      dob: obj.dob,\n      email: obj.email\n    }));\n    const newIssues = issues.map(obj => ({\n      message: obj.message,\n      priority: obj.priority,\n      Completed: obj.isCompleted.toString()\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, details.address), generateTable(newTenants), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), generateTable(newIssues), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }));\n  }; //generate table for each state (tenants, issues, and todos)\n\n\n  const generateTable = newTenants => {\n    const keys = Object.keys(newTenants[0]);\n    console.log(newTenants);\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: styles.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, keys.map(k => /*#__PURE__*/React.createElement(TableCell, {\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, k)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, newTenants.map(row => renderRows(row, keys)))));\n  };\n\n  const renderRows = (row, keys) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: 'aa',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, keys.map(k => /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, row[k])));\n  }; //main return\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, issues !== 0 ? renderDetails() : null), /*#__PURE__*/React.createElement(Button, {\n    onClick: showAllProperties,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Go back\"));\n}","map":{"version":3,"sources":["/home/jamarco/code/projects/project-4/frontend/src/components/dashboard/PropertyDetails.js"],"names":["React","useEffect","useState","Container","Button","Typography","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","PropertyDetails","property","showAllProperties","styles","details","setDetails","tenants","setTenants","issues","setIssues","todos","setTodos","url","fetch","then","res","json","data","renderDetails","newTenants","map","obj","first_name","last_name","dob","email","newIssues","message","priority","Completed","isCompleted","toString","address","generateTable","keys","Object","console","log","k","row","renderRows"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\nexport default function PropertyDetails({property, showAllProperties}) {\n    const styles = useStyles();\n\n    //load the property details\n    const [details, setDetails] = useState(0);\n    const [tenants, setTenants] = useState(0);\n    const [issues, setIssues] = useState(0);\n    const [todos, setTodos] = useState(0);\n\n    useEffect(() => {\n        const url = `http://localhost:3001/properties/${property}`\n        fetch(url)\n          .then(res => res.json())\n          .then(data => {\n            setDetails(data.property);\n            setTenants(data.tenants);\n            setTodos(data.todos);\n            setIssues(data.issues);\n          });\n    }, [])\n\n    // render the details after is loaded\n    const renderDetails = () =>{\n        const newTenants = tenants.map(obj => ({\n            \"Full Name\": obj.first_name + \" \" + obj.last_name,\n            dob : obj.dob,\n            email: obj.email\n          }))\n\n          const newIssues = issues.map(obj => ({\n            message: obj.message,\n            priority : obj.priority,\n            Completed : obj.isCompleted.toString()\n          }))\n          \n        return(\n            <React.Fragment>\n                <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n                    {details.address}\n                </Typography>\n                {generateTable(newTenants)}\n                <br/>\n                {generateTable(newIssues)}\n                <br/>\n            </React.Fragment>\n        )\n    }\n\n    //generate table for each state (tenants, issues, and todos)\n    const generateTable = (newTenants) =>{\n        const keys = Object.keys(newTenants[0]);\n        console.log(newTenants);\n        return (\n            <TableContainer component={Paper}>\n                <Table className={styles.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n\n            {keys.map(k => (<TableCell key={k}>{k}</TableCell>) )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {newTenants.map((row) => renderRows(row,keys))}\n        </TableBody>\n      </Table>\n            </TableContainer>\n        )\n    }\n\n    const renderRows = (row,keys) => {\n\n      return (\n        <TableRow key={'aa'}>\n        {keys.map(k => (\n          <TableCell component=\"th\" scope=\"row\">\n            {row[k]}\n          </TableCell>  \n        ))}\n      </TableRow>\n      )\n    }\n\n\n\n    //main return\n    return (\n        <Container maxWidth=\"xl\">\n            <div>{issues !== 0 ? renderDetails() : null}</div>\n            <Button onClick={showAllProperties} variant=\"contained\" color=\"primary\">Go back</Button>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}