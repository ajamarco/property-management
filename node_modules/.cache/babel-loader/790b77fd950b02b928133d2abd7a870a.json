{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/todos/TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\n\nconst TodoList = () => {\n  const [todos, setTodos] = React.useState([]);\n\n  const getTodos = () => {\n    fetch(\"http://localhost:3001/todos\").then(resp => resp.json()).then(data => setTodos(data.todo));\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const classes = useStyles();\n  todos.map(todo => /*#__PURE__*/React.createElement(Link, {\n    key: todo.id,\n    to: `/todos/${todo.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \" \", todo.message, \" \")));\n  return /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, todos.map(todo => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"\",\n      src: \"https://lh3.googleusercontent.com/proxy/cC8Pjjfi2eg_Z2yaJpXp0Spc1gC8RyMMgWNRLzNHLvB_y0_tiBfnbfsbGpDIqNCJwAFWgkqxePm4crWGqs3ZVb1m25HOLcARlA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: todo.message,\n      secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, \"Property:\"), todo.property),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/todos/TodoList.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","Link","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","TodoList","todos","setTodos","getTodos","fetch","then","resp","json","data","todo","classes","map","id","message","property"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\n\n\nconst TodoList = () => {\n\n  const [todos, setTodos] = React.useState([])\n\n  const getTodos = () => {\n    fetch(\"http://localhost:3001/todos\")\n    .then(resp => resp.json())\n    .then(data => setTodos(data.todo))\n  }\n\n\n  useEffect(() => {\n    getTodos()\n      \n    }, [])\n\n  const classes = useStyles();\n\n\ntodos.map(todo => \n  \n  <Link key={todo.id} to={`/todos/${todo.id}`}>\n    <h1> {todo.message} </h1>\n  \n  </Link>\n  \n  )\n\n  return (\n    <List className={classes.root}>\n\n      \n    {\n    \n    \n    todos.map((todo) => {\n   \n      \n      return (\n       \n        \n        <ListItem alignItems=\"flex-start\">\n     \n     <ListItemAvatar>\n          <Avatar alt=\"\" src=\"https://lh3.googleusercontent.com/proxy/cC8Pjjfi2eg_Z2yaJpXp0Spc1gC8RyMMgWNRLzNHLvB_y0_tiBfnbfsbGpDIqNCJwAFWgkqxePm4crWGqs3ZVb1m25HOLcARlA\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary={todo.message}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                Property:\n              </Typography>\n              {todo.property}\n            </React.Fragment>\n          }\n        />\n        </ListItem>\n         \n     \n      );\n    })}\n  </List>\n  )\n\n\n}\n\nexport default TodoList;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}