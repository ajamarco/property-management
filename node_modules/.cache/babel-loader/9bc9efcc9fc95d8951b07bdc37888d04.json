{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst IssueList = ({\n  issues\n}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = issue => () => {\n    const confObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        isCompleted: !issue.isCompleted\n      })\n    };\n    fetch(`http://localhost:3001/issues/${issue.id}`, confObj).then(resp => resp.json()).then(obj => {\n      setChecked(checked.map(el => el.id === obj.id ? obj : el));\n    });\n  };\n\n  const getIssues = () => {\n    fetch(\"http://localhost:3001/issues\").then(resp => resp.json()).then(obj => setChecked(obj));\n  };\n\n  const useEffect = () => {\n    getIssues();\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, checked.map(issue => {\n    const labelId = `checkbox-list-secondary-label-${issue.message}`; // const test = setChecked(issue.isCompleted)\n\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: issue.id,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: issue.isCompleted ? \"https://lh3.googleusercontent.com/YoZLPLcTuAZv2_04F5Rr1mmDoBYH9hxBZmusLpW2Dk4ycsbLydBBpC4b3q1YgG4c9ls\" : \"https://www.stickertalk.com/wp-content/uploads/2018/07/D-90-147.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      key: issue.id,\n      to: `/issues/${issue.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: ` ${issue.message}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 67\n      }\n    }), \"   \"), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleToggle(issue),\n      checked: issue.isCompleted ? true : false,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nexport default IssueList;","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/issues/IssueList.js"],"names":["React","Component","Link","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","IssueList","issues","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","classes","checked","setChecked","useState","handleToggle","issue","confObj","method","headers","body","JSON","stringify","isCompleted","fetch","id","then","resp","json","obj","map","el","getIssues","useEffect","labelId","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst IssueList = ({issues}) => {\n  \n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n\n\n  const handleToggle = (issue) => () => {\n    \n\n    const confObj = {\n      method: \"PATCH\",\n      headers:{\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        isCompleted: !issue.isCompleted\n      })\n    }\n\n    fetch(`http://localhost:3001/issues/${issue.id}`, confObj)\n    .then(resp => resp.json())\n    .then(obj => {\n      setChecked(checked.map(el => (el.id === obj.id)? obj : el ))\n    })\n    \n  };\n\n\n\n\nconst getIssues = ()=> {\n  fetch(\"http://localhost:3001/issues\")\n  .then(resp => resp.json())\n  .then(obj => setChecked(obj))\n}\n\n\nconst useEffect =() => {\ngetIssues()\n}\n\n\n    return (\n      <List dense className={classes.root}>\n        {checked.map((issue) => {\n          const labelId = `checkbox-list-secondary-label-${issue.message}`;\n            // const test = setChecked(issue.isCompleted)\n          return (\n           \n            <ListItem key={issue.id} button>\n         \n              <ListItemAvatar>\n            \n                <Avatar\n             \n                  src=  {issue.isCompleted?\"https://lh3.googleusercontent.com/YoZLPLcTuAZv2_04F5Rr1mmDoBYH9hxBZmusLpW2Dk4ycsbLydBBpC4b3q1YgG4c9ls\" :\"https://www.stickertalk.com/wp-content/uploads/2018/07/D-90-147.jpg\"}\n                />\n              </ListItemAvatar>\n              <Link key={issue.id} to={`/issues/${issue.id}`}  >  <ListItemText id={labelId} primary={` ${issue.message}`} />   </Link>\n              <ListItemSecondaryAction>\n    \n                <Checkbox\n                \n                  edge=\"end\"\n                  onChange={(handleToggle(issue))}\n                  checked={issue.isCompleted? true : false}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                   {/* <Checkbox\n                  edge=\"end\"\n                  onChange={handleToggle(issue)}\n                  checked={checked.indexOf(issue) !== -1}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                /> */}\n              </ListItemSecondaryAction>\n            </ListItem>\n         \n          );\n        })}\n      </List>\n    );\n      }\n\n\nexport default IssueList\n\n\n\n\n\n  \n  \n"]},"metadata":{},"sourceType":"module"}